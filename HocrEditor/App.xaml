<Application StartupUri="MainWindow.xaml"
             x:Class="HocrEditor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls/TitledPanel.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary x:Key="DisabledButtonIconResources">

                <Style TargetType="Image">
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding RelativeSource={RelativeSource AncestorType=ButtonBase}, Path=IsEnabled}"
                            Value="False">
                            <DataTrigger.Setters>
                                <Setter Property="Image.Opacity"
                                        Value="0.25" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ResourceDictionary>

            <!--  Style for translucent icons on a disabled button  -->
            <Style x:Key="DisabledButtonIcon"
                   TargetType="ButtonBase"
                   Resources="{StaticResource DisabledButtonIconResources}" />

            <!--  Applying disabled icon button style on toolbar buttons  -->
            <Style x:Key="ToolBarStyle">
                <Style.Resources>
                    <Style BasedOn="{StaticResource DisabledButtonIcon}"
                           TargetType="Button"
                           x:Key="{x:Static ToolBar.ButtonStyleKey}" />

                    <Style BasedOn="{StaticResource DisabledButtonIcon}"
                           TargetType="ToggleButton"
                           x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" />

                    <Style BasedOn="{StaticResource DisabledButtonIcon}"
                           TargetType="RadioButton"
                           x:Key="{x:Static ToolBar.RadioButtonStyleKey}" />
                </Style.Resources>
            </Style>

            <Style BasedOn="{StaticResource ToolBarStyle}"
                   TargetType="ToolBar" />
        </ResourceDictionary>
    </Application.Resources>
</Application>
