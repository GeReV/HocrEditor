<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:HocrEditor.Controls">
    <Style x:Key="ToolBarDropdownButtonStyle"
           TargetType="controls:DropdownButton"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DropdownButton}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="12" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter"
                                              RecognizesAccessKey="True"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False" />
                            <Path Grid.Column="1"
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  x:Name="Arrow">
                                <Path.Fill>
                                    <SolidColorBrush Color="#444444" />
                                </Path.Fill>
                            </Path>
                            <Popup x:Name="Popup"
                                   Grid.Column="0"
                                   IsOpen="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                                   StaysOpen="False">
                                <Border Background="{StaticResource PopupMenu.Static.Background}"
                                        BorderThickness="0">
                                    <ContentPresenter x:Name="PART_Popup"
                                                      ContentSource="Popup"
                                                      MinWidth="200" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}" />
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonChecked}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}" />
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder}" />
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true" />
                                <Condition Property="IsChecked"
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder}" />
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused"
                                           Value="true" />
                                <Condition Property="IsChecked"
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder}" />
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder}" />
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
