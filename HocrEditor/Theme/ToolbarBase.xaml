<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:HocrEditor.Controls"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Royale">
    <SolidColorBrush x:Key="ToolBarDarkFill"
                     Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarDisabledFill"
                     Color="#FFDADADA" />
    <SolidColorBrush x:Key="ToolBarDisabledBorder"
                     Color="#FFDADADA" />
    <SolidColorBrush x:Key="ToolBarSeparatorFill"
                     Color="#FFB6BDC5" />
    <SolidColorBrush x:Key="ToolBarButtonHover"
                     Color="#210080FF" />
    <SolidColorBrush x:Key="ToolBarButtonHoverBorder"
                     Color="#80DADADA" />
    <SolidColorBrush x:Key="ToolBarButtonChecked"
                     Color="#400080FF" />
    <SolidColorBrush x:Key="ToolBarButtonPressed"
                     Color="#400080FF" />
    <SolidColorBrush x:Key="ToolBarButtonPressedBorder"
                     Color="#90006CD9" />
    <SolidColorBrush x:Key="ToolBarMenuBorder"
                     Color="#FFB6BDC5" />
    <SolidColorBrush x:Key="ToolBarSubMenuBackground"
                     Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarMenuCheckFill"
                     Color="#FF212121" />
    <SolidColorBrush x:Key="ToolBarOpenHeaderBackground"
                     Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarTrayBackground"
                     Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarHorizontalBackground"
                     Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarVerticalBackground"
                     Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarGripper"
                     Color="#FF6D6D6D" />
    <SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground"
                     Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarToggleButtonVerticalBackground"
                     Color="#FFEEF5FD" />

    <Style x:Key="{x:Type ToolBarTray}"
           TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background"
                Value="{StaticResource Button.Static.Background}" />
        <Setter Property="IsLocked"
                Value="True" />
    </Style>

    <Style x:Key="ToolBarMainPanelBorderStyle"
           TargetType="{x:Type Border}">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="CornerRadius"
                Value="3,3,3,3" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                         Value="true">
                <Setter Property="CornerRadius"
                        Value="0,0,0,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolBarThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush TileMode="Tile"
                                              ViewboxUnits="Absolute"
                                              Viewbox="0,0,4,4"
                                              ViewportUnits="Absolute"
                                              Viewport="0,0,4,4">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="White"
                                                             Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                                            <GeometryDrawing Brush="{StaticResource ToolBarGripper}"
                                                             Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Cursor"
                                    Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolBar}"
           TargetType="{x:Type ToolBar}">
        <Setter Property="Background"
                Value="{StaticResource Button.Static.Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Border x:Name="MainPanelBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="GreenYellow"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            Style="{StaticResource ToolBarMainPanelBorderStyle}">
                        <DockPanel KeyboardNavigation.TabIndex="1"
                                   KeyboardNavigation.TabNavigation="Local">
                            <Thumb x:Name="ToolBarThumb"
                                   Margin="-3,-1,0,0"
                                   Padding="6,5,1,6"
                                   Style="{StaticResource ToolBarThumbStyle}"
                                   Width="10" />
                            <ContentPresenter x:Name="ToolBarHeader"
                                              ContentSource="Header"
                                              HorizontalAlignment="Center"
                                              Margin="4,0,4,0"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="Center" />
                            <ToolBarPanel x:Name="PART_ToolBarPanel"
                                          IsItemsHost="true"
                                          Margin="0,1,2,2"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Header"
                                 Value="{x:Null}">
                            <Setter Property="Visibility"
                                    TargetName="ToolBarHeader"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked"
                                 Value="true">
                            <Setter Property="Visibility"
                                    TargetName="ToolBarThumb"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation"
                                 Value="Vertical">
                            <Setter Property="Margin"
                                    TargetName="MainPanelBorder"
                                    Value="1" />
                            <Setter Property="Height"
                                    TargetName="ToolBarThumb"
                                    Value="10" />
                            <Setter Property="Width"
                                    TargetName="ToolBarThumb"
                                    Value="Auto" />
                            <Setter Property="Margin"
                                    TargetName="ToolBarThumb"
                                    Value="-1,-3,0,0" />
                            <Setter Property="Padding"
                                    TargetName="ToolBarThumb"
                                    Value="5,6,6,1" />
                            <Setter Property="Margin"
                                    TargetName="ToolBarHeader"
                                    Value="0,0,0,4" />
                            <Setter Property="Margin"
                                    TargetName="PART_ToolBarPanel"
                                    Value="1,0,2,2" />
                            <Setter Property="DockPanel.Dock"
                                    TargetName="ToolBarThumb"
                                    Value="Top" />
                            <Setter Property="DockPanel.Dock"
                                    TargetName="ToolBarHeader"
                                    Value="Top" />
                            <Setter Property="Margin"
                                    TargetName="MainPanelBorder"
                                    Value="0,0,0,11" />
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarVerticalBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}"
           TargetType="Separator">
        <Setter Property="Background"
                Value="{x:Static SystemColors.ControlTextBrush}" />
    </Style>

    <ResourceDictionary x:Key="DisabledButtonIconResources">
        <Style TargetType="Image">
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding RelativeSource={RelativeSource AncestorType=ButtonBase}, Path=IsEnabled}"
                    Value="False">
                    <DataTrigger.Setters>
                        <Setter Property="Image.Opacity"
                                Value="0.65" />
                    </DataTrigger.Setters>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </ResourceDictionary>

    <!--  Style for translucent icons on a disabled button  -->
    <Style x:Key="DisabledButtonIcon"
           TargetType="ButtonBase"
           BasedOn="{StaticResource BaseButtonStyle}"
           Resources="{StaticResource DisabledButtonIconResources}">
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
           BasedOn="{StaticResource DisabledButtonIcon}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
           BasedOn="{StaticResource DisabledButtonIcon}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource Button.Pressed.Border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource Button.Pressed.Border}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource Button.Pressed.Border}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type CheckBox}" />
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type RadioButton}" />

    <!--  Applying disabled icon button style on toolbar buttons  -->
    <Style x:Key="ToolBarTrayStyle">
        <Style.Resources>
            <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
                   BasedOn="{StaticResource DisabledButtonIcon}"
                   TargetType="Button" />

            <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
                   BasedOn="{StaticResource DisabledButtonIcon}"
                   TargetType="ToggleButton" />

            <Style BasedOn="{StaticResource ToolBarDropdownButtonStyle}"
                   TargetType="controls:DropdownButton"
                   Resources="{StaticResource DisabledButtonIconResources}" />

            <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
                   BasedOn="{StaticResource DisabledButtonIcon}"
                   TargetType="RadioButton" />

            <!-- <Style x:Key="{x:Type ToolBar}" -->
            <!--        BasedOn="{StaticResource ToolBarStyle}" -->
            <!--        TargetType="ToolBar" /> -->
        </Style.Resources>

        <Setter Property="ToolBarTray.Background"
                Value="{StaticResource Button.Static.Background}" />
        <Setter Property="ToolBarTray.IsLocked"
                Value="True" />
    </Style>
</ResourceDictionary>
